name: CI/CD Pipeline

on:
  push:
    branches:
      - "M1-4-2-CI-Practice"

jobs:
  # Check .editorconfig
  editorconfig:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Code Lint and style
      - name: Code Lint and Style
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install black
          pip install -r './requirements.txt'

      # Check makrdown files markdownlint-cli
      - name: Check Markdown files
        uses: github/super-linter@v4
        env:
          VALIDATE_MARKDOWN: true

      # Code Unittest
      - name: Code Unittest
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Execute unit-test
        run: |
          cd './app/'
          python -m unittest app_test.py

      #Check for hardcoded secrets (gitleaks)
      - name: Check for hardcoded secrets
        uses: zricethezav/gitleaks-action@v2
        with:
          args: --path .

      # SCA - Snyk; review security issues
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.0

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # Build and push Docker image. Use Git commit SHA as an Image tag.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/github-actions:${{ github.sha }}

      # SAST - SonarCloud; Review code smells and security issues
      - name: SonarCloud; Review code smells and security issues
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Scan the built image with Trivy
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/github-actions:${{ github.sha }}
          format: "sarif"
          output: "trivy-results.sarif"

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: "trivy-results.sarif"

      # (optional) Add CONTRIBUTORS guide
      # - name: Add CONTRIBUTORS guide
      #   run: |
      #     echo "Follow this guide" >> CONTRIBUTORS.md
      #     git add CONTRIBUTORS.md
      #     git commit -m "Add CONTRIBUTORS guide"
      #     git push
