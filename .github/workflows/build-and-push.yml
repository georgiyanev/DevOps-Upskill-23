name: CI/CD Pipeline

on: [push]

jobs:
  # Editorconfig Check
  editorconfig:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Editorconfig Check
        uses: editorconfig-checker/action-editorconfig-checker@main
      - name: Run Editorconfig Checker
        run: editorconfig-checker

  # Build and Code Quality Checks
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Code Lint and Style
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install black
          pip install -r './requirements.txt'
      - name: Check Markdown files
        uses: github/super-linter@v4
        env:
          VALIDATE_MARKDOWN: true
      - name: Code Unit Test
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Execute Unit Test
        run: |
          cd './app/'
          python -m unittest app_test.py
      - name: Check for Hardcoded Secrets (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security Checks and Docker Image Build
  security_and_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/github-actions:${{ github.sha }}

  # Static Analysis and Security Scans
  static_analysis_and_security_scan:
    runs-on: ubuntu-latest
    needs: security_and_docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: SonarCloud; Review code smells and security issues
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/github-actions:${{ github.sha }}
          format: "sarif"
          output: "trivy-results.sarif"
      # Additional steps can be added for more scans or checks

  # Add contributorts to README file
  add-contributors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: akhilmhdh/contributors-readme-action@v2.3.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
